<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="compile" name="Java Persistence for Relational Databases: Chapter 8">

  <!-- Load properties from property file -->
  <property file="build.properties"/>

  <!-- The following need to change per project -->
  <property name="app.name"            value="chapter09"/>
  <property name="company.name"        value="Apress"/>
  <property name="copyright.statement" value="Copyright &#169; 2002 ${company.name} All Rights Reserved."/>

  <!-- Load environment -->
  <property environment="myenv"/>

  <!-- Set other variables based on properties -->
  <property name="build.dir"       value="builds/${myenv.BUILD_LABEL}"/>
  <property name="classes.dir"     value="classes"/>
  <property name="doc.dir"		     value="doc"/>
  <property name="doc.api.dir"		 value="${doc.dir}/api"/>
  <property name="lib.dir"         value="lib"/>
  <property name="lib.ext.dir"     value="${lib.dir}/ext"/>
  <property name="sql.dir"		     value="sql"/>
  <property name="src.dir"		     value="src"/>
  <property name="xml.dir"		     value="xml"/>
  <property name="fastobjects.jar"           value="C:/Program Files/FastObjects_Trial/lib/FastObjects_e7_SDK.jar"/>
    <property name="main.args" value=""/>

  <!-- Build all classpaths -->
  <path id="app.classpath">
    <pathelement path="${pre.classpath}" />
    <pathelement location="${classes.dir}"/>
    <fileset dir="${lib.dir}" includes="*.jar"/>
    <fileset dir="${lib.ext.dir}" includes="*.jar"/>
    <pathelement location="${fastobjects.jar}"/>
  </path>


  <!-- Prepare directories -->
  <target   name="prepare"
            description="Creates directories used for building">
    <echo message="Running for '${ant.project.name}'"/>
    <!-- Create the time stamp -->
    <tstamp>
      <format property="DSTAMP" pattern="yyyy.MM.dd" />
    </tstamp>
    <!-- Create the directory structure used by build -->
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${doc.dir}"/>
    <mkdir dir="${doc.api.dir}"/>
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${lib.ext.dir}"/>
    <mkdir dir="${sql.dir}"/>
    <mkdir dir="${src.dir}"/>
    <mkdir dir="${xml.dir}"/>
  </target>


  <!-- Clean up all local directories -->
  <target name="clean"
         	description="Clean up all local directories">
    <delete dir="${classes.dir}"/>
  </target>


  <!-- Compile source -->
  <target name="compile"
          depends="prepare"
          description="Simply compiles java source code in ${src.dir}">
    <javac srcdir="${src.dir}"
           debug="true"
           destdir="${classes.dir}"
           classpathref="app.classpath" />

    <!-- Copy all property files too -->
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.properties" />
    </copy>
  </target>


  <!-- Build app jar -->
  <target name="lib"
          depends="compile"
          description="Builds the library jar from the classes generated by compile">
    <jar jarfile="${app.name}.jar">
      <fileset dir="classes"/>
    </jar>
  </target>


  <!-- Generate all of the java doc for the application. -->
  <target name="doc" depends="prepare">
    <javadoc packagenames="com.*"
             sourcepath="${src.dir}"
             defaultexcludes="yes"
             destdir="${doc.api.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="${ant.project.name}">
      <doctitle><![CDATA[<h1>${ant.project.name} JavaDoc</h1>]]></doctitle>
      <bottom><![CDATA[<i>${copyright.statement}</i>]]></bottom>
    </javadoc>
  </target>


  <!-- Build everything -->
  <target name="build"
          depends="lib">
    <mkdir dir="builds"/>
    <mkdir dir="${build.dir}"/>

    <copy todir="${build.dir}" file="${app.name}.jar"/>
  </target>


  <!-- Run main.class, you can override this on the command line with
      -Dmain.class=com.mypack.MyMain -->
  <target name="run">
    <java classname="${main.class}" classpathref="app.classpath" fork="true">
        <arg line="${main.args}"/>
    </java>
  </target>
</project>
